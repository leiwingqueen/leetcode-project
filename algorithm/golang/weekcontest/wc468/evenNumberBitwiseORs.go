package wc468

// 给你一个整数数组 nums。
//
//返回数组中所有 偶数 的按位 或 运算结果。
//
//如果 nums 中没有偶数，返回 0。
//
//
//
//示例 1：
//
//输入： nums = [1,2,3,4,5,6]
//
//输出： 6
//
//解释：
//
//偶数为 2、4 和 6。它们的按位或运算结果是 6。
//
//示例 2：
//
//输入： nums = [7,9,11]
//
//输出： 0
//
//解释：
//
//数组中没有偶数，因此结果为 0。
//
//示例 3：
//
//输入： nums = [1,8,16]
//
//输出： 24
//
//解释：
//
//偶数为 8 和 16。它们的按位或运算结果是 24。
//
//
//
//提示：
//
//1 <= nums.length <= 100
//1 <= nums[i] <= 100

func evenNumberBitwiseORs(nums []int) int {
	res := 0
	for _, num := range nums {
		if num%2 == 0 {
			res |= num
		}
	}
	return res
}
